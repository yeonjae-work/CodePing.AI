name: 📚 Documentation Configuration

# 문서 자동화 설정 및 환경 변수
env:
  # 📖 문서 생성 설정
  DOC_PYTHON_VERSION: "3.12"
  DOC_OUTPUT_DIR: "docs-site"
  DOC_ARTIFACTS_RETENTION: 30  # days
  
  # 🔧 API 문서 설정
  API_DOC_TOOL: "pdoc3"
  SPHINX_THEME: "sphinx_rtd_theme"
  SPHINX_EXTENSIONS: "sphinx.ext.autodoc,sphinx.ext.viewcode,sphinx.ext.napoleon"
  
  # 📊 메트릭 설정
  COVERAGE_THRESHOLD: 70  # minimum coverage percentage
  COMPLEXITY_THRESHOLD: 10  # maximum cyclomatic complexity
  DOCSTRING_THRESHOLD: 80  # minimum docstring coverage
  
  # 🏗️ 아키텍처 문서 설정
  MERMAID_THEME: "default"
  DIAGRAM_FORMAT: "svg"
  ARCHITECTURE_DEPTH: 3  # directory tree depth
  
  # 📝 변경 로그 설정
  CHANGELOG_TAGS_LIMIT: 10  # number of recent tags to include
  CHANGELOG_COMMITS_LIMIT: 100  # number of recent commits to analyze
  
  # 🚀 배포 설정
  GITHUB_PAGES_BRANCH: "gh-pages"
  GITHUB_PAGES_DIR: "docs"
  
  # 📱 알림 설정
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}

# 재사용 가능한 스텝 정의
on:
  workflow_call:
    inputs:
      doc_type:
        description: 'Type of documentation to generate'
        required: false
        default: 'all'
        type: string
      force_rebuild:
        description: 'Force rebuild all documentation'
        required: false
        default: false
        type: boolean
    outputs:
      documentation_url:
        description: 'URL of the generated documentation'
        value: ${{ jobs.setup.outputs.doc_url }}
      artifacts_uploaded:
        description: 'Whether artifacts were uploaded successfully'
        value: ${{ jobs.setup.outputs.artifacts_success }}

jobs:
  setup:
    name: 📋 Documentation Setup
    runs-on: ubuntu-latest
    
    outputs:
      doc_url: ${{ steps.setup.outputs.doc_url }}
      artifacts_success: ${{ steps.setup.outputs.artifacts_success }}
      
    steps:
    - name: 📋 Setup documentation environment
      id: setup
      run: |
        echo "🔧 Setting up documentation environment..."
        
        # GitHub Pages URL 생성
        REPO_NAME="${{ github.event.repository.name }}"
        OWNER="${{ github.repository_owner }}"
        DOC_URL="https://${OWNER}.github.io/${REPO_NAME}/docs/"
        
        echo "doc_url=${DOC_URL}" >> $GITHUB_OUTPUT
        echo "artifacts_success=false" >> $GITHUB_OUTPUT
        
        echo "📚 Documentation will be deployed to: ${DOC_URL}"
        echo "🕐 Generation started at: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
        
    - name: 📊 Environment summary
      run: |
        echo "📚 Documentation Configuration Summary"
        echo "======================================"
        echo "🐍 Python Version: ${{ env.DOC_PYTHON_VERSION }}"
        echo "📖 API Tool: ${{ env.API_DOC_TOOL }}"
        echo "🎨 Sphinx Theme: ${{ env.SPHINX_THEME }}"
        echo "📊 Coverage Threshold: ${{ env.COVERAGE_THRESHOLD }}%"
        echo "🔧 Complexity Threshold: ${{ env.COMPLEXITY_THRESHOLD }}"
        echo "📝 Docstring Threshold: ${{ env.DOCSTRING_THRESHOLD }}%"
        echo "🏗️ Architecture Depth: ${{ env.ARCHITECTURE_DEPTH }}"
        echo "📋 Changelog Tags: ${{ env.CHANGELOG_TAGS_LIMIT }}"
        echo "🚀 Target Branch: ${{ env.GITHUB_PAGES_BRANCH }}"
        echo "📁 Target Directory: ${{ env.GITHUB_PAGES_DIR }}"
        echo ""
        echo "🔄 Input Parameters:"
        echo "  - Doc Type: ${{ inputs.doc_type || 'all' }}"
        echo "  - Force Rebuild: ${{ inputs.force_rebuild || 'false' }}" 